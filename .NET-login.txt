========= 1. Se configura la autenticación =========
// Configuración de servicios
builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options => {
        options.LoginPath = "/Account/Login"; // Ruta de inicio de sesión
        options.LogoutPath = "/Account/Logout"; // Ruta de cierre de sesión
    });

builder.Services.AddControllersWithViews();

========= 2. Crear el controlador =========
[HttpGet]
    public IActionResult Login() => View();

    [HttpPost]
    public async Task<IActionResult> Login(LoginViewModel model)
    {
        // Verifica las credenciales del usuario
        if (ModelState.IsValid)
        {
            // Lógica para autenticar al usuario...
            var claims = new List<Claim> { new Claim(ClaimTypes.Name, model.Username) };
            var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
            await HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, new ClaimsPrincipal(claimsIdentity));
            return RedirectToAction("Index", "Home");
        }
        return View(model);
    }

    public async Task<IActionResult> Logout()
    {
        await HttpContext.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);
        return RedirectToAction("Index", "Home");
    }

========== 3. Restringir acceso a los controladores ===========
[Authorize]
public class HomeController : Controller
{
    public IActionResult Index() => View();
}

________________________________________________________________________________
    EJEMPLO DE VISTA DE LOGIN
________________________________________________________________________________
@model TuNamespace.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Iniciar sesión";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Login" method="post">
    <div class="form-group">
        <label asp-for="Username"></label>
        <input asp-for="Username" class="form-control" />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Iniciar sesión</button>
</form>

<div>
    <a asp-controller="Home" asp-action="Index">Regresar a la página principal</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

-------------------------------------------------------------------------
                MODELO
-------------------------------------------------------------------------
namespace TuNamespace.ViewModels
{
    public class LoginViewModel
    {
        [Required]
        public string Username { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; }
    }
}
